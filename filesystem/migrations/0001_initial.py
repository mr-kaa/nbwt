# Generated by Django 3.1.3 on 2020-11-05 04:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tags', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Hash',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('md5', models.CharField(max_length=255, unique=True, verbose_name='File hash (md5)')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='File name')),
                ('file_type', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='File type')),
                ('slug', models.SlugField(default='_', max_length=64, unique=True, verbose_name='File slug')),
                ('descriptions', models.TextField(blank=True, default=None, verbose_name='File descriptions')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='File add time')),
                ('file', models.FileField(blank=True, upload_to='files/%Y/%m/%d', verbose_name='file')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Hide file')),
                ('is_clone', models.BooleanField(default=False, verbose_name='clone of another file')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='file_author', to=settings.AUTH_USER_MODEL, verbose_name='File author')),
                ('md5', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='files', to='filesystem.hash', verbose_name='File hash')),
                ('similar_file', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.PROTECT, related_name='clones', to='filesystem.file', verbose_name='Previously created similar file')),
                ('tags', models.ManyToManyField(blank=True, default=None, related_name='files', to='tags.Tag', verbose_name='File tags')),
            ],
        ),
    ]
